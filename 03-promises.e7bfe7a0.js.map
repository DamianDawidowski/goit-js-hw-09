{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAMC,SAASC,cAAc,UAC7BC,EAAOF,SAASC,cAAc,QAC9BE,EAASH,SAASI,iBAAiB,SAEzC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,WAAUC,IAEpBG,EAAO,C,SAAEJ,E,WAAUC,GAAa,GAEjCA,EAAW,G,CAgBlB,SAASO,GAAQR,SAAEA,EAAQC,WAAEA,IAC3BQ,EAAAlB,GAASmB,OAAOC,QAAQ,sBAAoBX,QAAiBC,M,CAG/D,SAASW,GAAUZ,SAAEA,EAAQC,WAAEA,IAC7BQ,EAAAlB,GAASmB,OAAOG,QACd,uBAAqBb,QAAeC,M,CAIxCR,EAAIqB,iBAAiB,SAtBrB,SAA2BC,GACzBA,EAAMC,eACN,IAAIf,EAAaJ,EAAO,GAAGoB,cACvBC,EAAYrB,EAAO,GAAGoB,cACtBE,EAAStB,EAAO,GAAGoB,cACvB,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCrB,EAAcqB,EAAGnB,GAAYoB,KAAKT,GAAWU,MAAMd,GACnDP,GAAciB,EACdtB,EAAK2B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst Btn = document.querySelector('button');\nconst form = document.querySelector('form');\nconst inputs = document.querySelectorAll('input');\n\nfunction createPromise(position, firstDelay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, firstDelay });\n      } else {\n        reject({ position, firstDelay });\n      }\n    }, firstDelay);\n  });\n}\n\nfunction createAllPromises(event) {\n  event.preventDefault;\n  let firstDelay = inputs[0].valueAsNumber;\n  let delayStep = inputs[1].valueAsNumber;\n  let amount = inputs[2].valueAsNumber;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay).then(onSuccess).catch(onError);\n    firstDelay += delayStep;\n    form.reset();\n  }\n}\n\nfunction onError({ position, firstDelay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n}\n\nfunction onSuccess({ position, firstDelay }) {\n  Notiflix.Notify.success(\n    `✅ Fulfilled promise ${position} in ${firstDelay}ms`\n  );\n}\n\nBtn.addEventListener('click', createAllPromises);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$Btn","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$inputs","querySelectorAll","$47d4ff9957288465$var$createPromise","position","firstDelay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onError","$parcel$interopDefault","Notify","failure","$47d4ff9957288465$var$onSuccess","success","addEventListener","event","preventDefault","valueAsNumber","delayStep","amount","i","then","catch","reset"],"version":3,"file":"03-promises.e7bfe7a0.js.map"}