{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAASF,SAASG,iBAAiB,SAiCvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACTC,QAAQC,IAAI,cACUC,KAAKC,SAAW,GAEpCN,EAAQ,CAAEO,SAAAV,E,aAAUC,IAKlBG,EAAK,CAAEM,SAAAV,E,aAAUC,GAAe,GAEnC,IAAK,G,CAMd,SAASU,GAAUD,SAAAE,EAAQX,aAAEA,IAC3BY,OAAOC,QAAQ,sBAAoBF,QAAiBX,M,CAGtD,SAASc,GAAYL,SAAAM,EAAQf,aAAEA,IAC7BY,OAAOI,QAAQ,uBAAqBD,QAAef,M,CArDrDP,EAAKwB,iBAAiB,UAGtB,SAA2BC,GACzBA,EAAMC,eACWvB,EAAO,GAAGwB,MAA3B,IACIC,EAAYC,WAAW1B,EAAO,GAAGwB,OACjCG,EAAiB3B,EAAO,GAAGwB,MAC3BpB,EAAeqB,EAMnB,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAgBC,IAGjD1B,EAAc0B,EAAUxB,GAAcyB,KAAKX,GAAWY,MAAMhB,GAI5DV,GAAgBsB,WAAWD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst inputs = document.querySelectorAll('input');\n\nlet position = 0;\n \n\nform.addEventListener('submit', createAllPromises);\n \n\nfunction createAllPromises(event) {\n  event.preventDefault;\n  let firstDelay = inputs[0].value;\n  let delayStep = parseFloat(inputs[1].value);\n  let promisedAmount = inputs[2].value;\n  let PromiseDelay = delayStep;\n  // console.log(\n  //   firstDelay\n  // );\n  // console.log(`firstDelay: ${firstDelay},delayStep: ${delayStep},promisedAmount: ${promisedAmount}`);\n  // console.log(`firstDelay: ${firstDelay},delayStep: ${delayStep},promisedAmount: ${promisedAmount}`);\n  for (let position = 1; position <= promisedAmount; position++) {\n\n    // createPromise(position, delayStep);\n    createPromise(position, PromiseDelay).then(onSuccess).catch(onError);\n\n  \n    // console.log(`position ${position}`);\n    PromiseDelay += parseFloat(delayStep);\n   \n  }\n}\n\n \n\n  function createPromise(position, PromiseDelay) {\n    return new Promise((resolve, reject) => {\n   \n      setTimeout(() => {\n        console.log('TimedOUT!!');\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, PromiseDelay });\n          // console.log(`✅ Fulfilled promise ${position} in ${PromiseDelay}ms`);\n          // Fulfill\n        } else {\n          // console.log(`❌ Rejected promise ${position} in ${PromiseDelay}ms`);\n          reject({ position, PromiseDelay });\n        }\n      }, 1000);\n      // console.log(PromiseDelay);\n \n    });\n} ;\n \nfunction onError({ position, PromiseDelay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${PromiseDelay}ms`);\n}\n\nfunction onSuccess({ position, PromiseDelay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${PromiseDelay}ms`);\n}\n\n\n\n\n\n\n// // XXXXXXXXXXXXXXXXXXXXXXX\n\n// // Change value of isSuccess variable to call resolve or reject\n// const isSuccess = true;\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   }, 4000);\n// });\n\n// // Will run first\n// console.log(\"Before promise.then()\");\n\n// // Registering promise callbacks\n// promise.then(\n//   // onResolve will run third or not at all\n//   value => {\n//     console.log(\"onResolve call inside promise.then()\");\n//     console.log(value); // \"Success! Value passed to resolve function\"\n//   },\n//   // onReject will run third or not at all\n//   error => {\n//     console.log(\"onReject call inside promise.then()\");\n//     console.log(error); // \"Error! Error passed to reject function\"\n//   }\n// );\n\n// // Will run second\n// console.log(\"After promise.then()\");"],"names":["parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputs","querySelectorAll","$47d4ff9957288465$var$createPromise","position2","PromiseDelay","Promise","resolve","reject","setTimeout","console","log","Math","random","position","$47d4ff9957288465$var$onError","position3","Notify","failure","$47d4ff9957288465$var$onSuccess","position4","success","addEventListener","event","preventDefault","value","delayStep","parseFloat","promisedAmount","position1","then","catch"],"version":3,"file":"03-promises.5865f62a.js.map"}